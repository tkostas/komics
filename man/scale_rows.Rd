% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scale_rows.R
\name{scale_rows}
\alias{scale_rows}
\title{Scale rows}
\usage{
scale_rows(x, columns = "..all..", complete_match = FALSE, center = TRUE,
  scale = TRUE, label = "scaled_", drop_input = FALSE)
}
\arguments{
\item{x}{A dataframe with the values to be normalized.}

\item{columns}{Vector containing column names to be standardized. By default all columns will be selected
\code{"..all.."}. You can add a vector with the column names, or a part of the column name that is unique
and use partial matching to identify columns (e.g. "values_"). If complete matching is used, specify
\code{complete_match} argument to TRUE.}

\item{complete_match}{Logical with default value \code{FALSE} that allows partial matching of the column
names for selection of the column for normalizaiton. If set to \code{TRUE}, columns that match exactly with
the input will be used.}

\item{center}{See \code{link{scale}} function.}

\item{scale}{See \code{link{scale}} function.}

\item{label}{Label tag to be added in each collumn. Default value is "nmax_".}

\item{drop_input}{Select if you want to append the normalized data into the input dataframe or keep only them.
Logical with default value \code{FALSE}, meaning that the processed values will be added to the input.}
}
\description{
Scale rows
}
\examples{
df <- data.frame(text = c("A", "B", "C", "D", "E", "F", "G"),
                 V1 = c(1, 2, 3, 4, 3, 2, 1),
                 V2 = c(5, 6, 4, 3, NA, 6, 7),
                 V3 = c(3, 4, 5, 6, 7, 4, 3))

scaled_df <- scale_rows(x = df,
                        columns = c("V1", "V2", "V3"),
                        complete_match = TRUE,
                        drop_input = TRUE)

scaled_df <- scale_rows(x = df,
                        columns = "V",
                        complete_match = FALSE)
}
