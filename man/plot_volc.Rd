% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_volc.R
\name{plot_volc}
\alias{plot_volc}
\title{Create volcano plot}
\usage{
plot_volc(x, p_val, fold_change, fold_threshold = 2, p_val_threshold = 0.05,
  plot_config = list(col = c("blue", "red", "grey"), point_size = 1, xlim =
  c(-4, 4), ylim = c(0, NA), xlab = "Log2 fold change A/B", ylab =
  "-log p-value", title =
  "Differentially abundant proteins between groups A and B", show_labs = FALSE,
  lab_lines = FALSE, labs_size = 2, labs_id = "Gene.names...primary.."))
}
\arguments{
\item{x}{Data frame containing p-values and calculated fold_change. If fold change is not
calculated use \code{calc_fold_change} function first and use the output.}

\item{p_val}{Character string for the identification of the column containing p-values.
Only one column should match.}

\item{fold_change}{Character string for the identification of the column containing
log2_fold change values. Only one column should match.}

\item{fold_threshold}{Threshold for fold difference. Default is 2. You don’t have
to calculate the log2 value of the threshold.}

\item{p_val_threshold}{Threshold for t-test p-value. Default is 0.05.}

\item{plot_config}{List of plot parameters (see usage):\cr
\code{col}: vector containing the colors for proteins with significant abundance\cr
 in group A, B and non-significant.
\code{point_size}: Point size.\cr
\code{xlim}: limits for the x-axis.\cr
\code{ylim}: limits for the y-axis.\cr
\code{xlab}: Title for the x axis. Default is  "Log2 fold change A/B".\cr
\code{ylab}: Title for the y-axis. Default is "-log p-value".\cr
\code{title}: Plot title. Default is "Differentially abundant proteins between groups A and B".\cr
\code{show_labs}: Logical with default value FALSE. If switched to TRUE text annotation
defined by the labs_id element (see below) will be added in differentially abundant points.\cr
\code{lab_lines}: Logical with default value FALSE. If switched to TRUE, connecting lines
between individual points and labels will appear. Uses function from ggrepel package.\cr
It because of the complexity due to labeling, it is advised first to see the number
of differentially abundant proteins and then replot the graph with text annotation.\cr
\code{labs_size}: Size of the text annotation. Default is 2.\cr
\code{labs_id}: Column containing text annotation, like gene names. Default value is
“Gene.names...primary..”. Gene names can be downloaded from Uniprot and merged
using \code{append_cols_df} function.}
}
\description{
Reads a data frame and plots fold difference and p-value in a volcano plot.
P-values can be calculated using \code{calc_ttest_padj} and fold change (log2 of fold change)
using \code{calc_fold_change}. Column names for p-value and \code{log2_fold} difference is
matched based on character matched with \code{p_val} and \code{fold_change} arguments.
Thresholds can be modified using \code{fold_threshold} and \code{p_val_threshold} arguments.
Plot parameters are added in the \code{plot_config} list. Protein annotation (e.g. gene names)
can be added. If annotation is not included in the data frame, you can use \code{append_cols_df}
function to add extra columns in your dataset and then continue with plotting. The processed
dataset of \code{plot_volc} function can be saved in an object (see example).
}
\examples{
p_val <- "pValue"
fold_change <- "log2_fold_change_AB"
plot_config <- list(col = c("blue", "red", "grey"),
                   point_size = 2,
                   xlim = c(-4, 4),
                   ylim = c(0, NA),
                   xlab = "Log2 fold change A/B",
                   ylab = "-log p-value",
                   title = "DA proteins between groups A and B",
                   show_labs = TRUE,
                   lab_lines = TRUE,
                   labs_size = 2,
                   labs_id = "Gene.names...primary..")

my_graph_data <- plot_volc(x = data,
                          p_val = p_val,
                          fold_change = fold_change,
                          fold_threshold = 1.5,
                          p_val_threshold = 0.05,
                          plot_config = plot_config)

write.csv(my_graph_data, file = “my_graph_data.csv”, row.names = FALSE)
}
